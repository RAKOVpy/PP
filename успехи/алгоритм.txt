3 главных множества для работы:
  -	Компетенции: включают в себя набор навыков. Навыки в константной форме (new_rules)
  -	Профессии: включают в себя набор навыков и знаний. Знания и навыки в свободной форме
  -	Курсы: включают в себя набор навыков и знаний. Знания и навыки в свободной форме.

Задача:
  Составить алгоритм, который будет действовать следующим образом:
	  На вход ему подается одна профессия, одна обр. программа, множество Компетенций.
    1.	Распаковываем обр. Программу на курсы, далее для каждого курса:
      a.	Для каждой компетенции находим количество совпадений в навыках (по алгоритму A) и знаниях (по алгоритму B)
      b.	Теперь каждый курс имеет id Компетенции и вес для нее (количество совпадений для данного курса, деленное на общее кол-во совпадений для данной обр. программы)
    2.	Аналогично рассматриваем профессию: 
      a.	Применяем алгоритмы A и B
      b.	Теперь профессия имеет для каждой компетенции определенный вес. 
    3.	Для каждой обр. Программы:
      a.	Считаем модуль разности между весами профессии и курса
      b.	Ответ: курс с наименьшей “ошибкой”


Новая реализация:
- Очевидно, как профессия взаимодействует с компетенцией (уже обозначено в таблице, осталось чуть-чуть доработать, чтобы установить связь. 
Это можно сделать через chat gpt одним запросом)
- Находим максимальное количество связей, которое покрывает каждый курс. Выбираем максимальный. Это и будет ответ. 
- Примечание: Каждое новое совпадение в одной компетенции будет давать всё меньший вес в итоговый результат. 
Потому что мы считаем, что человек изучает базу: ему хватит времени на стажировке, чтобы освоить смежные инструменты благодаря компетенциям. 
Следовательно, чем больше связей, тем лучше. Чем больше углубление в определенную компетенцию, тем хуже.

