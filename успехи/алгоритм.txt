Version 2.0
С куратором обсудили реализацию алгоритма. Команде были поставлены новые задачи по добавлению в таблицы тегов, чтобы можно было качесвенно делать связь алгоритму. Ожидаю реализации, после чего начну писать новую реализацию










__________
Version 1.0

Сырое, начальное решение задачи связи профессии и курсов через компетенции:
Алгоритм дает веса курсу и профессии через компетенции следующим образом:
Находит в навыках и знаниях профессии английские слова, и ищет кол-во совпадений по этим словам для каждого множества в компетенциях. То есть устанавливаем "простую" связь между профессией и компетенциями. Аналогично находим "простую" связь между курсом и компетенциями. Считаем количество совпадений (N) в найденных связях, получаем натуральное число от нуля. Так делаем для каждого курса, сортируем по убыванию N

Задача: 
Расширить возможности алгоритма: 
Возникают следующие вопросы:
1. Как связывать русский текст в знаниях и навыках профессий и курсов с множеством компетенций? Это главный вопрос, по которому будет строится алгоритм связи. Например, в курсе проходится "Линейная регрессия", во множестве компетенций есть такое "инструмент", но если будет указано в курсе "Linear regression"? Связи не будет, хотя, очевидно, она есть. 
	1. Есть интуитивное решение: делать запрос к GPT. Подавать на вход навыки и знания, получать на выходе набор инструментов, навыков, знаний, методов решения задач в структурированном виде (еще желательно на английском языке, потому что есть конкретные термины, которые пишутся только так и никак иначе, минимизируем вероятность разной формулировки). И уже по этому ответу делать связь со множеством компетенций. Так можно решить проблему свободной записи навыков и знаний в курсах и профессиях. В компетенциях всё итак описано в структурированной форме, даже если используется русский язык. 
2. Может ли быть такое, что в курсе находится определенный инструмент, который не отражен во множестве компетенций? Например, изучается sony vegas, а в компетенциях только adobe premier pro (условно). То есть достаточно ли аналогов инструментов находится в компетенциях? И надо ли отдельно это проверять? Например, делать запрос к GPT, чтобы он написал как можно больше аналогов определенного инструмента








3 главных множества для работы:
  -	Компетенции: включают в себя набор навыков. Навыки в константной форме (new_rules)
  -	Профессии: включают в себя набор навыков и знаний. Знания и навыки в свободной форме
  -	Курсы: включают в себя набор навыков и знаний. Знания и навыки в свободной форме.

Задача:
  Составить алгоритм, который будет действовать следующим образом:
	  На вход ему подается одна профессия, одна обр. программа, множество Компетенций.
    1.	Распаковываем обр. Программу на курсы, далее для каждого курса:
      a.	Для каждой компетенции находим количество совпадений в навыках (по алгоритму A) и знаниях (по алгоритму B)
      b.	Теперь каждый курс имеет id Компетенции и вес для нее (количество совпадений для данного курса, деленное на общее кол-во совпадений для данной обр. программы)
    2.	Аналогично рассматриваем профессию: 
      a.	Применяем алгоритмы A и B
      b.	Теперь профессия имеет для каждой компетенции определенный вес. 
    3.	Для каждой обр. Программы:
      a.	Считаем модуль разности между весами профессии и курса
      b.	Ответ: курс с наименьшей “ошибкой”


Новая реализация:
- Очевидно, как профессия взаимодействует с компетенцией (уже обозначено в таблице, осталось чуть-чуть доработать, чтобы установить связь. 
Это можно сделать через chat gpt одним запросом)
- Находим максимальное количество связей, которое покрывает каждый курс. Выбираем максимальный. Это и будет ответ. 
- Примечание: Каждое новое совпадение в одной компетенции будет давать всё меньший вес в итоговый результат. 
Потому что мы считаем, что человек изучает базу: ему хватит времени на стажировке, чтобы освоить смежные инструменты благодаря компетенциям. 
Следовательно, чем больше связей, тем лучше. Чем больше углубление в определенную компетенцию, тем хуже.

